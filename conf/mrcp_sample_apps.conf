; UniMRCP applications for Asterisk.
;
; http://www.unimrcp.org
;
; This file provides sample dialplan contexts which demonstrate how to use the applications
; SynthAndRecog(), MRCPRecog(), and MRCPSynth() included in the module app_unimrcp.so.
; There is also a usage example of the Generic Speech Recognition API implemented via
; the module res_speech_unimrcp.so.

;
; SynthAndRecog() examples.
;

; This context demonstrates how to use the application SynthAndRecog() with a plain-text prompt and a built-in speech grammar.
[synthandrecog-app1]
exten => s,1,Answer
exten => s,2,SynthAndRecog(Please say a number,builtin:grammar/number,t=5000&b=1&ct=0.7&spl=en-US)
exten => s,3,Goto(synthandrecog-output,s,1)

; This context demonstrates how to use the application SynthAndRecog() with a plain-text prompt and a built-in DTMF grammar.
[synthandrecog-app2]
exten => s,1,Answer
exten => s,2,SynthAndRecog(Please input a number,builtin:dtmf/number,t=5000&b=1&ct=0.7&spl=en-US)
exten => s,3,Goto(synthandrecog-output,s,1)

; This context demonstrates how to use the application SynthAndRecog() with an SSML prompt and an inline SRGS XML speech grammar.
[synthandrecog-app3]
exten => s,1,Answer
exten => s,2,SynthAndRecog(<?xml version=\"1.0\"?><speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.w3.org/2001/10/synthesis http://www.w3.org/TR/speech-synthesis/synthesis.xsd\" xml:lang=\"en-US\">Please pick a color: red <break/> green <break/> or blue </speak>,<?xml version=\"1.0\"?><grammar xmlns=\"http://www.w3.org/2001/06/grammar\" xml:lang=\"en-US\" version=\"1.0\" mode=\"voice\" tag-format=\"semantics/1.0-literals\" root=\"color\"><rule id=\"color\"><one-of><item>red</item><item>green</item><item>blue</item></one-of></rule></grammar>,t=5000&b=1&ct=0.7)
exten => s,3,Goto(synthandrecog-output,s,1)

; This context demonstrates how to use the application SynthAndRecog() with an SSML prompt and an inline SRGS XML DTMF grammar.
[synthandrecog-app4]
exten => s,1,Answer
exten => s,2,SynthAndRecog(<?xml version=\"1.0\"?><speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.w3.org/2001/10/synthesis http://www.w3.org/TR/speech-synthesis/synthesis.xsd\" xml:lang=\"en-US\">Please pick a color: for red press 1 <break/> for green press 2 <break/> for blue press 3 </speak>,<?xml version=\"1.0\"?><grammar xmlns=\"http://www.w3.org/2001/06/grammar\" version=\"1.0\" mode=\"dtmf\" tag-format=\"semantics/1.0-literals\" root=\"color\"><rule id=\"color\"><one-of><item>1<tag>red</tag></item><item>2<tag>green</tag></item><item>3<tag>blue</tag></item></one-of></rule></grammar>,t=5000&b=1&ct=0.7)
exten => s,3,Goto(synthandrecog-output,s,1)

; This context demonstrates how to use the application SynthAndRecog() with a non-bargeinable prompt.
[synthandrecog-app5]
exten => s,1,Answer
exten => s,2,SynthAndRecog("This is a non-bargeinable prompt. When the prompt is finished, say a number",builtin:grammar/number,t=5000&b=0&ct=0.7&spl=en-US)
exten => s,3,Goto(synthandrecog-output,s,1)

; This context demonstrates how to use the application SynthAndRecog() with a prompt and a grammar referenced from files.
[synthandrecog-app6]
exten => s,1,Answer
exten => s,2,SynthAndRecog(/usr/local/unimrcp/data/speak.xml,/usr/local/unimrcp/data/grammar.xml,t=5000&b=1&ct=0.7&spl=en-US)
exten => s,3,Goto(synthandrecog-output,s,1)

; This context demonstrates how to use the application SynthAndRecog() with a grammar specified by an HTTP URI.
[synthandrecog-app7]
exten => s,1,Answer
exten => s,2,SynthAndRecog(Please say a digit,http://unimrcp.net/data/grammar.xml,t=5000&b=1&ct=0.7&spl=en-US)
exten => s,3,Goto(synthandrecog-output,s,1)

; This context demonstrates how to use the application SynthAndRecog() with multiple grammars specified
; using a comma-separated list.
[synthandrecog-app8]
exten => s,1,Answer
exten => s,2,SynthAndRecog(Please say a number,"builtin:grammar/number,builtin:dtmf/number",t=5000&b=1&ct=0.7&spl=en-US)
exten => s,3,Goto(synthandrecog-output,s,1)

; This context demonstrates how to request more than one alternative recognition result (N-Best-List-Length > 1)
; using the application SynthAndRecog().
[synthandrecog-app9]
exten => s,1,Answer
exten => s,2,SynthAndRecog(Please say a number,builtin:grammar/number,t=5000&b=1&ct=0.4&nb=3&spl=en-US)
exten => s,3,Goto(synthandrecog-nbest-output,s,1)

; This macro outputs recognition results produced by the application SynthAndRecog()
[synthandrecog-output]
exten => s,1,Verbose(1, status: ${RECOG_STATUS}, completion-cause: ${RECOG_COMPLETION_CAUSE}, result: ${RECOG_RESULT})
exten => s,2,GotoIf($["${RECOG_STATUS}" = "OK"]?3:5)
exten => s,3,GotoIf($["${RECOG_COMPLETION_CAUSE}" = "000"]?4:5)
exten => s,4,Verbose(1, confidence: ${RECOG_CONFIDENCE(0)}, grammar: ${RECOG_GRAMMAR(0)}, input: ${RECOG_INPUT(0)}, instance: ${RECOG_INSTANCE(0/0)})
exten => s,5,Hangup

; This macro outputs alternate recognition results produced by the application SynthAndRecog()
[synthandrecog-nbest-output]
exten => s,1,Verbose(1, status: ${RECOG_STATUS}, completion-cause: ${RECOG_COMPLETION_CAUSE}, result: ${RECOG_RESULT})
exten => s,2,GotoIf($["${RECOG_STATUS}" = "OK"]?3:9)
exten => s,3,GotoIf($["${RECOG_COMPLETION_CAUSE}" = "000"]?4:9)
exten => s,4,Set(i=0)
exten => s,5,While(${RECOG_INPUT(${i})})
exten => s,6,Verbose(1, confidence: ${RECOG_CONFIDENCE(${i})}, grammar: ${RECOG_GRAMMAR(${i})}, input: ${RECOG_INPUT(${i})}, instance: ${RECOG_INSTANCE(${i}/0)})
exten => s,7,Set(i=$[${i} + 1])
exten => s,8,EndWhile()
exten => s,9,Hangup

;
; MRCPRecog() examples.
;

; This context demonstrates how to use the application MRCPRecog() with a pre-recorded prompt file and a built-in speech grammar.
[mrcprecog-app1]
exten => s,1,Answer
exten => s,2,MRCPRecog(builtin:grammar/number,t=5000&b=1&ct=0.7&spl=en-US&f=hello-world)
exten => s,3,Goto(mrcprecog-output,s,1)

; This context demonstrates how to use the application MRCPRecog() with a pre-recorded prompt file and a built-in DTMF grammar.
[mrcprecog-app2]
exten => s,1,Answer
exten => s,2,MRCPRecog(builtin:dtmf/number,t=5000&b=1&ct=0.7&spl=en-US&f=hello-world)
exten => s,3,Goto(mrcprecog-output,s,1)

; This macro outputs recognition results produced by the application SynthAndRecog()
[mrcprecog-output]
exten => s,1,Verbose(1, status: ${RECOGSTATUS}, completion-cause: ${RECOG_COMPLETION_CAUSE}, result: ${RECOG_RESULT})
exten => s,2,GotoIf($["${RECOGSTATUS}" = "OK"]?3:5)
exten => s,3,GotoIf($["${RECOG_COMPLETION_CAUSE}" = "000"]?4:5)
exten => s,4,Verbose(1, confidence: ${RECOG_CONFIDENCE(0)}, grammar: ${RECOG_GRAMMAR(0)}, input: ${RECOG_INPUT(0)}, instance: ${RECOG_INSTANCE(0/0)})
exten => s,5,Hangup

;
; MRCPSynth() examples.
;

; This context demonstrates how to use the application MRCPSynth() with a plain-text prompt.
[mrcpsynth-app1]
exten => s,1,Answer
exten => s,n,MRCPSynth(Hello world!,l=en-US)
exten => s,n,Verbose(1, ${SYNTHSTATUS})
exten => s,n,Hangup

; This context demonstrates how to use the application MRCPSynth() with an SSML prompt.
[mrcpsynth-app2]
exten => s,1,Answer
exten => s,n,MRCPSynth(<?xml version=\"1.0\"?><speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.w3.org/2001/10/synthesis http://www.w3.org/TR/speech-synthesis/synthesis.xsd\" xml:lang=\"en-US\">Hello world!</speak>)
exten => s,n,Verbose(1, ${SYNTHSTATUS})
exten => s,n,Hangup

;
; Generic Speech Recognition API.
;

; This context makes use of the Generic Speech Recognition API of Asterisk implemented via the module res_speech_unimrcp.so.
[say-digit]
exten => s,1,Answer()
exten => s,2,SpeechCreate()
exten => s,3,SpeechLoadGrammar(digit,/usr/local/unimrcp/data/grammar.xml)
exten => s,4,SpeechActivateGrammar(digit)
exten => s,5,SpeechBackground(hello-world,20)
exten => s,6,GotoIf($["${SPEECH(results)}" = "0"]?7:9)
exten => s,7,Playback(vm-nonumber)
exten => s,8,Goto(5)
exten => s,9,Verbose(1, "Recognition result: ${SPEECH_TEXT(0)}, confidence score: ${SPEECH_SCORE(0)}, grammar-uri: ${SPEECH_GRAMMAR(0)}")
exten => s,10,SpeechDeactivateGrammar(digit)
exten => s,11,SpeechUnloadGrammar(digit)
exten => s,12,SpeechDestroy()
exten => s,13,Hangup()
